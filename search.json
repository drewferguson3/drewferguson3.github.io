[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "My name is Drew Ferguson and I am senior at the University of Nebraska-Lincoln. I am currently working to get my Bachelor’s degree in Journalism in Sports Media and Communications, with a minor in Business Administration. I will be graduating in the May of 2025! Born in Omaha, Nebraska, I always knew that I wanted to be a Husker. As a kid, I loved playing sports and spending as much time as I could outside. Going through school, I always knew I wanted to do something that allowed me to show my creative side. In the College of Journalism and Mass Communications, I have been able to do exactly that. I have gained valuable experience behind the scenes (or camera,) creating graphics for different events, creating video packages, and being an on-air talent. All of these experiences have been nothing short of fulfilling. In the College of Business, I have been able to gain valuable skills relating entrepreneurship, finance, and of course, administration. Being able to combine these skills makes me feel more than ready to get out into the real world and impact any company that I have the privilege of joining. You can find links to my Instagram, LinkedIn, and GitHub on this page."
  },
  {
    "objectID": "ProjectWork.html",
    "href": "ProjectWork.html",
    "title": "R Notebook",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(ggalt)\n\nRegistered S3 methods overwritten by 'ggalt':\n  method                  from   \n  grid.draw.absoluteGrob  ggplot2\n  grobHeight.absoluteGrob ggplot2\n  grobWidth.absoluteGrob  ggplot2\n  grobX.absoluteGrob      ggplot2\n  grobY.absoluteGrob      ggplot2\n\nlibrary(ggtext)\n\n\nzion &lt;- read_csv(\"zion.csv\")\n\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\n\n\nRows: 7 Columns: 31\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (5): Season, Team, Lg, Pos, Awards\ndbl (26): Age, G, GS, MP, FG, FGA, FG%, 3P, 3PA, 3P%, 2P, 2PA, 2P%, eFG%, FT...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nzionadv &lt;- read_csv(\"zionadv.csv\")\n\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\n\n\nRows: 7 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (6): Season, Age, Team, Lg, Pos, Awards\ndbl (23): G, GS, MP, PER, TS%, 3PAr, FTr, ORB%, DRB%, TRB%, AST%, STL%, BLK%...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nant &lt;- read_csv(\"ant.csv\")\n\nRows: 6 Columns: 31\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (5): Season, Team, Lg, Pos, Awards\ndbl (26): Age, G, GS, MP, FG, FGA, FG%, 3P, 3PA, 3P%, 2P, 2PA, 2P%, eFG%, FT...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nantadv &lt;- read_csv(\"antadv.csv\")\n\nRows: 6 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (6): Season, Age, Team, Lg, Pos, Awards\ndbl (23): G, GS, MP, PER, TS%, 3PAr, FTr, ORB%, DRB%, TRB%, AST%, STL%, BLK%...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\ncade &lt;- read_csv(\"cade.csv\")\n\nRows: 5 Columns: 31\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (6): Season, Age, Team, Lg, Pos, Awards\ndbl (25): G, GS, MP, FG, FGA, FG%, 3P, 3PA, 3P%, 2P, 2PA, 2P%, eFG%, FT, FTA...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\ncadeadv &lt;- read_csv(\"cadeadv.csv\")\n\nRows: 5 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (6): Season, Age, Team, Lg, Pos, Awards\ndbl (23): G, GS, MP, PER, TS%, 3PAr, FTr, ORB%, DRB%, TRB%, AST%, STL%, BLK%...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\npaolo &lt;- read_csv(\"paolo.csv\")\n\nRows: 4 Columns: 31\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (6): Season, Age, Team, Lg, Pos, Awards\ndbl (25): G, GS, MP, FG, FGA, FG%, 3P, 3PA, 3P%, 2P, 2PA, 2P%, eFG%, FT, FTA...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\npaoloadv &lt;- read_csv(\"paoloadv.csv\")\n\nRows: 4 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (6): Season, Age, Team, Lg, Pos, Awards\ndbl (23): G, GS, MP, PER, TS%, 3PAr, FTr, ORB%, DRB%, TRB%, AST%, STL%, BLK%...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nwemby &lt;- read_csv(\"wemby.csv\")\n\nRows: 3 Columns: 31\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (5): Season, Team, Lg, Pos, Awards\ndbl (26): Age, G, GS, MP, FG, FGA, FG%, 3P, 3PA, 3P%, 2P, 2PA, 2P%, eFG%, FT...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nwembyadv &lt;- read_csv(\"wemby.csv\")\n\nRows: 3 Columns: 31\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (5): Season, Team, Lg, Pos, Awards\ndbl (26): Age, G, GS, MP, FG, FGA, FG%, 3P, 3PA, 3P%, 2P, 2PA, 2P%, eFG%, FT...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nhead(zion)\n\n# A tibble: 6 × 31\n  Season    Age Team  Lg    Pos       G    GS    MP    FG   FGA  `FG%`  `3P`\n  &lt;chr&gt;   &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;\n1 2019-20    19 NOP   NBA   PF       24    24  27.8   8.8  15    0.583   0.3\n2 2020-21    20 NOP   NBA   PF       61    61  33.2  10.4  17    0.611   0.2\n3 2021-22    21 NOP   NBA   PF       NA    NA  NA    NA    NA   NA      NA  \n4 2022-23    22 NOP   NBA   PF       29    29  33     9.8  16.2  0.608   0.2\n5 2023-24    23 NOP   NBA   PF       70    70  31.5   8.9  15.6  0.57    0.1\n6 2024-25    24 NOP   NBA   PF       30    30  28.6   9.6  16.9  0.567   0.1\n# ℹ 19 more variables: `3PA` &lt;dbl&gt;, `3P%` &lt;dbl&gt;, `2P` &lt;dbl&gt;, `2PA` &lt;dbl&gt;,\n#   `2P%` &lt;dbl&gt;, `eFG%` &lt;dbl&gt;, FT &lt;dbl&gt;, FTA &lt;dbl&gt;, `FT%` &lt;dbl&gt;, ORB &lt;dbl&gt;,\n#   DRB &lt;dbl&gt;, TRB &lt;dbl&gt;, AST &lt;dbl&gt;, STL &lt;dbl&gt;, BLK &lt;dbl&gt;, TOV &lt;dbl&gt;, PF &lt;dbl&gt;,\n#   PTS &lt;dbl&gt;, Awards &lt;chr&gt;\n\n\n\nzionstats &lt;- zion |&gt; \n  filter(\n    Season == \"2024-25\"\n    \n  )\n\n{R}\n\nlibrary(hoopR)\nlibrary(dplyr)"
  },
  {
    "objectID": "posts/last-5-no1-picks/index.html",
    "href": "posts/last-5-no1-picks/index.html",
    "title": "Comparing The NBA’s Last Five #1 Overall Picks",
    "section": "",
    "text": "The NBA’s last five #1 overall picks have been living up to the expectations. In the charts I show on this website, you will get an idea of the impact that the last 5 #1 overall picks had on their teams in their inaugural NBA seasons, and now over the course of their early careers. (2019-2023, Zaccharie Risacher not included because he has only played one full season.)\n\n\nCode\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\nlibrary(ggplot2)\nlibrary(ggalt)\n\n\nRegistered S3 methods overwritten by 'ggalt':\n  method                  from   \n  grid.draw.absoluteGrob  ggplot2\n  grobHeight.absoluteGrob ggplot2\n  grobWidth.absoluteGrob  ggplot2\n  grobX.absoluteGrob      ggplot2\n  grobY.absoluteGrob      ggplot2\n\n\nCode\nlibrary(ggrepel)\n\n\n\n\nCode\nzion &lt;- read_csv(\"zion.csv\")\n\n\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\n\n\nRows: 7 Columns: 31\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (5): Season, Team, Lg, Pos, Awards\ndbl (26): Age, G, GS, MP, FG, FGA, FG%, 3P, 3PA, 3P%, 2P, 2PA, 2P%, eFG%, FT...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\nCode\nzion_rookie &lt;- zion |&gt;\n  filter(Season == \"2019-20\")\n\n\n\n\nCode\nzion_rookie_stats &lt;- zion_rookie |&gt;\n  mutate(Player = \"Zion Williamson\") |&gt;\n  select(Player, Season, PTS, TRB, AST) |&gt;\n  mutate(Total = PTS + TRB + AST)\n\n\n\n\nCode\nant &lt;- read_csv(\"ant.csv\")\n\n\nRows: 6 Columns: 31\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (5): Season, Team, Lg, Pos, Awards\ndbl (26): Age, G, GS, MP, FG, FGA, FG%, 3P, 3PA, 3P%, 2P, 2PA, 2P%, eFG%, FT...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\nCode\nant_rookie &lt;- ant |&gt;\n  filter(Season == \"2020-21\")\n\n\n\n\nCode\nant_rookie_stats &lt;- ant_rookie |&gt;\n  mutate(Player = \"Anthony Edwards\") |&gt;\n  select(Player, Season, PTS, TRB, AST) |&gt;\n  mutate(Total = PTS + TRB + AST)\n\n\n\n\nCode\ncade &lt;- read_csv(\"cade.csv\")\n\n\nRows: 5 Columns: 31\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (6): Season, Age, Team, Lg, Pos, Awards\ndbl (25): G, GS, MP, FG, FGA, FG%, 3P, 3PA, 3P%, 2P, 2PA, 2P%, eFG%, FT, FTA...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\nCode\ncade_rookie &lt;- cade |&gt;\n  filter(Season == \"2021-22\")\n\n\n\n\nCode\ncade_rookie_stats &lt;- cade_rookie |&gt;\n  mutate(Player = \"Cade Cunningham\") |&gt;\n  select(Player, Season, PTS, TRB, AST) |&gt;\n  mutate(Total = PTS + TRB + AST)\n\n\n\n\nCode\npaolo &lt;- read_csv(\"paolo.csv\")\n\n\nRows: 4 Columns: 31\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (6): Season, Age, Team, Lg, Pos, Awards\ndbl (25): G, GS, MP, FG, FGA, FG%, 3P, 3PA, 3P%, 2P, 2PA, 2P%, eFG%, FT, FTA...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\nCode\npaolo_rookie &lt;- paolo |&gt;\n  filter(Season == \"2022-23\")\n\n\n\n\nCode\npaolo_rookie_stats &lt;- paolo_rookie |&gt;\n  mutate(Player = \"Paolo Banchero\") |&gt;\n  select(Player, Season, PTS, TRB, AST) |&gt;\n  mutate(Total = PTS + TRB + AST)\n\n\n\n\nCode\nwemby &lt;- read_csv(\"wemby.csv\")\n\n\nRows: 3 Columns: 31\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (5): Season, Team, Lg, Pos, Awards\ndbl (26): Age, G, GS, MP, FG, FGA, FG%, 3P, 3PA, 3P%, 2P, 2PA, 2P%, eFG%, FT...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\nCode\nwemby_rookie &lt;- wemby |&gt;\n  filter(Season == \"2023-24\")\n\n\n\n\nCode\nwemby_rookie_stats &lt;- wemby_rookie |&gt;\n  mutate(Player = \"Victor Wembanyama\") |&gt;\n  select(Player, Season, PTS, TRB, AST) |&gt;\n  mutate(Total = PTS + TRB + AST)\n\n\n\n\nCode\nrookie_stats_all &lt;- bind_rows(\n  zion_rookie_stats,\n  ant_rookie_stats,\n  cade_rookie_stats,\n  paolo_rookie_stats,\n  wemby_rookie_stats\n)\n\n\n\n\nCode\nrookie_long &lt;- rookie_stats_all |&gt;\n  pivot_longer(cols = c(PTS, TRB, AST),\n               names_to = \"Stat\",\n               values_to = \"Value\")\n\n\n\n\nCode\nrookie_pra_stats &lt;- rookie_long |&gt;\n  mutate(\n    Stat = recode(Stat,\n                  \"PTS\" = \"Points\",\n                  \"TRB\" = \"Rebounds\",\n                  \"AST\" = \"Assists\")\n  ) |&gt;\n  mutate(\n    Stat = factor(Stat, levels = c(\"Assists\", \"Rebounds\", \"Points\"))  \n  )\n\n\nIn today’s NBA, top draft picks are expected to contribute immediately. This chart stacks the per-game averages for Points, Rebounds, and Assists during the rookie seasons of the last five #1 overall picks: Zion Williamson, Anthony Edwards, Cade Cunningham, Paolo Banchero, and Victor Wembanyama.\n\n\nCode\nggplot(rookie_pra_stats, aes(x = Value, y = Player, fill = Stat)) +\n  geom_bar(stat = \"identity\") +\n  geom_text(aes(label = round(Value, 1)),\n            position = position_stack(vjust = 0.5),\n            size = 3, color = \"white\") +\n  scale_fill_manual(\n    values = c(\n      \"Assists\" = \"red\",   \n      \"Rebounds\" = \"forestgreen\", \n      \"Points\" = \"steelblue\"   \n    ),\n    breaks = c(\"Points\", \"Rebounds\", \"Assists\")\n  ) +\n  labs(\n    title = \"Rookie Season Per-Game Averages\",\n    subtitle = \"Points, Rebounds, And Assists For The Last Top 5 \n#1 Draft Picks In Their Rookie Season\",\n    x = \"Per-Game Total\", y = \"\",\n    fill = \"\",\n    caption = \"By: Drew Ferguson \n              Source: Pro Basketball Reference\"\n  ) +\n  theme_minimal(base_size = 12) +\n  theme(\n    legend.position = \"top\",\n    plot.title = element_text(face = \"bold\"),\n    axis.text.y = element_text(face = \"bold\"),\n    plot.caption = element_text(hjust = 1, , size = 9, margin = margin(t = 10))\n  )\n\n\n\n\n\n\n\n\n\nWhat’s interesting isn’t just who scored the most, it’s how different their rookie profiles are. Zion came in as a scoring machine, putting up over 22 points per game in just 24 appearances. Wembanyama paired elite scoring with huge rebounding numbers, already showing signs of a generational two-way presence. Cade Cunningham and Paolo Banchero posted similar stat lines, proving themselves as steady all-around contributors. Edwards, known for his explosiveness, delivered in scoring and added sneaky value as a rebounder.\nThe chart shows how each player’s early role reflected not just their skill-set, but also the situation they walked into. Some were expected to be franchise cornerstones from day one; others had time to ease in. But what they all share is the pressure, and production, that comes with being the #1 pick in the age of social media and nonstop analysis.\n\n\nCode\nzionadv &lt;- read_csv(\"zionadv.csv\")\n\n\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\n\n\nRows: 7 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (6): Season, Age, Team, Lg, Pos, Awards\ndbl (23): G, GS, MP, PER, TS%, 3PAr, FTr, ORB%, DRB%, TRB%, AST%, STL%, BLK%...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\nCode\nzionadv_rookie &lt;- zionadv |&gt;\n  filter(Season == \"2019-20\")\n\n\n\n\nCode\nzion_rookie_advstats &lt;- zionadv_rookie |&gt;\n  mutate(Player = \"Zion Williamson\") |&gt;\n  select(Player, Season, WS, VORP, BPM) |&gt;\n  mutate(Total = WS + VORP + BPM)\n\n\n\n\nCode\nantadv &lt;- read_csv(\"antadv.csv\")\n\n\nRows: 6 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (6): Season, Age, Team, Lg, Pos, Awards\ndbl (23): G, GS, MP, PER, TS%, 3PAr, FTr, ORB%, DRB%, TRB%, AST%, STL%, BLK%...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\nCode\nantadv_rookie &lt;- antadv |&gt;\n  filter(Season == \"2020-21\")\n\n\n\n\nCode\nant_rookie_advstats &lt;- antadv_rookie |&gt;\n  mutate(Player = \"Anthony Edwards\") |&gt;\n  select(Player, Season, WS, VORP, BPM) |&gt;\n  mutate(Total = WS + VORP + BPM)\n\n\n\n\nCode\ncadeadv &lt;- read_csv(\"cadeadv.csv\")\n\n\nRows: 5 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (6): Season, Age, Team, Lg, Pos, Awards\ndbl (23): G, GS, MP, PER, TS%, 3PAr, FTr, ORB%, DRB%, TRB%, AST%, STL%, BLK%...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\nCode\ncadeadv_rookie &lt;- cadeadv |&gt;\n  filter(Season == \"2021-22\")\n\n\n\n\nCode\ncade_rookie_advstats &lt;- cadeadv_rookie |&gt;\n  mutate(Player = \"Cade Cunningham\") |&gt;\n  select(Player, Season, WS, VORP, BPM) |&gt;\n  mutate(Total = WS + VORP + BPM)\n\n\n\n\nCode\npaoloadv &lt;- read_csv(\"paoloadv.csv\")\n\n\nRows: 4 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (6): Season, Age, Team, Lg, Pos, Awards\ndbl (23): G, GS, MP, PER, TS%, 3PAr, FTr, ORB%, DRB%, TRB%, AST%, STL%, BLK%...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\nCode\npaoloadv_rookie &lt;- paoloadv |&gt;\n  filter(Season == \"2022-23\")\n\n\n\n\nCode\npaolo_rookie_advstats &lt;- paoloadv_rookie |&gt;\n  mutate(Player = \"Paolo Banchero\") |&gt;\n  select(Player, Season, WS, VORP, BPM) |&gt;\n  mutate(Total = WS + VORP + BPM)\n\n\n\n\nCode\nwembyadv &lt;- read_csv(\"wembyadv.csv\")\n\n\nRows: 3 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (6): Season, Age, Team, Lg, Pos, Awards\ndbl (23): G, GS, MP, PER, TS%, 3PAr, FTr, ORB%, DRB%, TRB%, AST%, STL%, BLK%...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\nCode\nwembyadv_rookie &lt;- wembyadv |&gt;\n  filter(Season == \"2023-24\")\n\n\n\n\nCode\nwemby_rookie_advstats &lt;- wembyadv_rookie |&gt;\n  mutate(Player = \"Victor Wembanyama\") |&gt;\n  select(Player, Season, WS, VORP, BPM) |&gt;\n  mutate(Total = WS + VORP + BPM)\n\n\n\n\nCode\npelis &lt;-read.csv(\"pelis.csv\")\n\n\n\n\nCode\nwolves &lt;-read.csv(\"wolves.csv\")\n\n\n\n\nCode\npistons &lt;-read.csv(\"pistons.csv\")\n\n\n\n\nCode\nmagic &lt;-read.csv(\"magic.csv\")\n\n\n\n\nCode\nspurs &lt;-read.csv(\"spurs.csv\")\n\n\n\n\nCode\npelis_rookie &lt;- pelis |&gt;\n  filter(Season == \"2019-20\")\n\n\n\n\nCode\nwolves_rookie &lt;- wolves |&gt;\n  filter(Season == \"2020-21\")\n\n\n\n\nCode\npistons_rookie &lt;- pistons |&gt;\n  filter(Season == \"2021-22\")\n\n\n\n\nCode\nmagic_rookie &lt;- magic |&gt;\n  filter(Season == \"2022-23\")\n\n\n\n\nCode\nspurs_rookie &lt;- spurs |&gt;\n  filter(Season == \"2023-24\")\n\n\n\n\nCode\npelis_rookie_stats &lt;- pelis_rookie |&gt;\n  select(Team, Season, W, L, W.L.)\n\n\n\n\nCode\nwolves_rookie_stats &lt;- wolves_rookie |&gt;\n  select(Team, Season, W, L, W.L.)\n\n\n\n\nCode\npistons_rookie_stats &lt;- pistons_rookie |&gt;\n  select(Team, Season, W, L, W.L.)\n\n\n\n\nCode\nmagic_rookie_stats &lt;- magic_rookie |&gt;\n  select(Team, Season, W.L.)\n\n\n\n\nCode\nspurs_rookie_stats &lt;- spurs_rookie |&gt;\n  select(Team, Season, W.L.)\n\n\n\n\nCode\nrookie_advstats &lt;- bind_rows(\n  zion_rookie_advstats,\n  ant_rookie_advstats,\n  cade_rookie_advstats,\n  paolo_rookie_advstats,\n  wemby_rookie_advstats\n)\n\n\n\n\nCode\nrookie_advstatslong &lt;- rookie_advstats |&gt;\n  pivot_longer(cols = c(WS, VORP, BPM),\n               names_to = \"Stat\",\n               values_to = \"Value\") |&gt;\n  mutate(\n    Stat = recode(Stat,\n                  \"WS\" = \"Win Shares\",\n                  \"VORP\" = \"Value Over Replacement\",\n                  \"BPM\" = \"Box +/-\"),\n    Stat = factor(Stat, levels = c(\"Win Shares\", \"Value Over Replacement\", \"Box +/-\"))\n  )\n\n\n\n\nCode\nrookie_advtotals &lt;- rookie_advstatslong |&gt;\n  group_by(Player) |&gt;\n  summarize(Impact_Score = sum(Value, na.rm = TRUE))\n\n\n\n\nCode\nteam_winpct &lt;- tibble(\n  Player = c(\"Zion Williamson\", \"Anthony Edwards\", \"Cade Cunningham\", \"Paolo Banchero\", \"Victor Wembanyama\"),\n  Team_Win_Pct = c(0.417, 0.319, 0.280, 0.415, 0.268) \n)\n\n\n\n\nCode\nchart2_data &lt;- left_join(rookie_advtotals, team_winpct, by = \"Player\")\n\n\n\n\nCode\nplayer_colors &lt;- c(\n  \"Zion Williamson\" = \"orange\",\n  \"Anthony Edwards\" = \"steelblue\",\n  \"Cade Cunningham\" = \"red\",\n  \"Paolo Banchero\" = \"darkgrey\",\n  \"Victor Wembanyama\" = \"black\"\n) \n\n\nBeing the number one overall pick comes with big expectations, not just to perform individually, but to elevate the entire team. In this chart, we map each player’s rookie Win Shares against their team’s overall win percentage during that same season. The goal? To see how much their on-court impact translated into team success.\n\n\nCode\nggplot(chart2_data, aes(x = Impact_Score, y = Team_Win_Pct, color = Player)) +\n  geom_point(size = 6) +\n  scale_color_manual(values = player_colors) +\n  scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +\n  labs(\n    title = \"Rookie Impact vs Team Success\",\n    subtitle = \"Total Impact Score (Win Shares, +/-, Value Over Replacement) vs Team Win Percentage\",\n    x = \"Total Impact Score\",\n    y = \"Team Win Percentage\",\n    color = \"\",\n     caption = \"By: Drew Ferguson \n              Source: Pro Basketball Reference\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    plot.title = element_text(face = \"bold\", size = 16),\n    plot.subtitle = element_text(size = 12),\n    axis.title.x = element_text(margin = margin(t = 10)),\n    axis.title.y = element_text(margin = margin(r = 10)),\n    legend.position = \"right\",\n    plot.caption = element_text(hjust = 1, , size = 9, margin = margin(t = 10))\n  )\n\n\n\n\n\n\n\n\n\nWhat this comparison reveals is how complex that connection really is. For example, Victor Wembanyama’s rookie year was statistically dominant, and his Win Shares reflect that, yet the Spurs still struggled as a team. In contrast, Paolo Banchero’s production came in a more structured environment, where the Magic were on the rise and his numbers helped fuel real wins. Zion’s shortened rookie season still produced a strong Win Share value despite playing just 24 games, while Cade Cunningham and Anthony Edwards posted solid individual contributions amid team rebuilds.\nThe biggest takeaway is that a rookie’s impact doesn’t happen all at once, or all because of them. Even elite players need a system, coaching, and supporting cast to turn stats into wins. This chart adds important context to the numbers, it shows that while some rookies shine individually, others start shifting their team’s identity from the moment they step on the floor. The best front offices aren’t just drafting talent, they’re building environments where that talent can actually win.\n\n\nCode\nrookie_vs_career_totals &lt;- tibble(\n  Player = c(\"Zion Williamson\", \"Anthony Edwards\", \"Cade Cunningham\", \n             \"Paolo Banchero\", \"Victor Wembanyama\"),\n\n  Rookie_Total = c(\n    22.5 + 6.3 + 2.1,   \n    19.3 + 4.7 + 2.9,   \n    17.4 + 5.5 + 5.6,   \n    19.3 + 4.7 + 2.9,   \n    21.4 + 10.6 + 3.9  \n  ),\n\n  Career_Total = c(\n    25.0 + 7.0 + 3.3,   \n    22.0 + 5.2 + 3.8,  \n    19.9 + 5.1 + 6.3,   \n    20.1 + 5.4 + 3.0,   \n    22.5 + 10.8 + 3.8   \n  )\n)\n\n\n\n\nCode\nrookie_vs_career_long &lt;- rookie_vs_career_totals |&gt;\n  pivot_longer(cols = c(Rookie_Total, Career_Total),\n               names_to = \"Type\",\n               values_to = \"Value\") |&gt;\n  mutate(\n    Type = recode(Type,\n                  \"Rookie_Total\" = \"Rookie\",\n                  \"Career_Total\" = \"Career\")\n  )\n\n\nA player’s rookie season tells us a lot — but it doesn’t tell the whole story. This chart compares each of the last five #1 overall NBA draft picks’ rookie per-game stats with their current career averages. Using a dumbbell plot, we can clearly visualize how their production has changed over time in three core areas: Points, Rebounds, and Assists.\n\n\nCode\nggplot(rookie_vs_career_long, aes(y = fct_reorder(Player, Value), x = Value, color = Type)) +\n  geom_line(aes(group = Player), color = \"gray80\", size = 2) + \n  geom_point(size = 4) +\n  scale_color_manual(values = c(\"Rookie\" = \"#1f77b4\", \"Career\" = \"#ff7f0e\")) +\n  labs(\n    title = \"Rookie vs Career Total Per-Game Production\",\n    subtitle = \"Combined Points + Rebounds + Assists (Per Game)\",\n    x = \"Total Per-Game Average\",\n    y = \"\",\n    color = \"Averages\",\n    caption = \"By: Drew Ferguson \n              Source: Pro Basketball Reference\",\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    plot.title = element_text(face = \"bold\", size = 16),\n    plot.subtitle = element_text(size = 12),\n    axis.text.y = element_text(face = \"bold\"),\n    legend.position = \"top\",\n    plot.caption = element_text(hjust = 1, , size = 9, margin = margin(t = 10))\n  )\n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\n\n\n\n\nThe plot highlights both consistency and growth. For instance, Anthony Edwards and Paolo Banchero have maintained steady numbers, showing that their rookie impact wasn’t a fluke — it was just the beginning. Zion Williamson stands out with an early scoring burst that set a high bar, while his career average has slightly fluctuated due to injuries and limited availability. Cade Cunningham shows upward movement in assists, reflecting his growing role as a floor general, while Victor Wembanyama — though early in his career — is already laying the foundation of a stat-stuffing trajectory.\nWhat this chart reveals is how careers evolve. Some players come in hot and stay hot. Others build over time, adjusting to the pace, system, and expectations of the league. Rookie years are high-pressure snapshots. But the career averages show who’s built to last — and who’s still climbing toward their peak."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "DrewsSportsBlog",
    "section": "",
    "text": "Comparing The NBA’s Last Five #1 Overall Picks\n\n\n\n\n\n\nNBA\n\n\nRookies\n\n\nProduction\n\n\n\n\n\n\n\n\n\nApr 14, 2025\n\n\nDrew Ferguson\n\n\n\n\n\n\nNo matching items"
  }
]